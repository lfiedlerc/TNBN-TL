/* Generated By:JavaCC: Do not edit this line. BayesNetParseConstants.java */
package elvira.parser;

public interface BayesNetParseConstants {

  int EOF = 0;
  int GRAPH = 4;
  int NETWORK = 5;
  int IDIAGRAM = 6;
  int IDWITHSVNODES = 7;
  int DAN = 8;
  int UID = 9;
  int BNET = 10;
  int TITLE = 11;
  int KINDOFGRAPH = 12;
  int COMMENT = 13;
  int AUTHOR = 14;
  int WHOCHANGED = 15;
  int WHENCHANGED = 16;
  int VISUALPRECISION = 17;
  int VERSION = 18;
  int LOCKED = 19;
  int CONSISTENCY = 20;
  int NODE = 21;
  int FINITE = 22;
  int CONTINUOUS = 23;
  int LINK = 24;
  int RELATION = 25;
  int DETERMINISTIC = 26;
  int HENRIONVSDIEZ = 27;
  int NODETYPE = 28;
  int NODEKIND = 29;
  int NUMSTATES = 30;
  int UNIT = 31;
  int POSX = 32;
  int POSY = 33;
  int STATES = 34;
  int VALUES = 35;
  int TABLE = 36;
  int TABLEINTERVAL = 37;
  int TREE = 38;
  int TREEINTERVAL = 39;
  int CONTINUOUS_TREE = 40;
  int CONVEXSET = 41;
  int CREDALSETTREE = 42;
  int CASE = 43;
  int DEFVALUE = 44;
  int DEFINTERVALVALUE = 45;
  int DEFINTERVALVALUES = 46;
  int DIRECTED = 47;
  int EVERY = 48;
  int ACTIVE = 49;
  int FUNCTION = 50;
  int RELATIONNAME = 51;
  int RELATIONKIND = 52;
  int EXP = 53;
  int MIN = 54;
  int MAX = 55;
  int CHANCE = 56;
  int DECISION = 57;
  int UTILITY = 58;
  int SUPER_VALUE = 59;
  int POTENTIAL = 60;
  int CONDITIONAL_PROB = 61;
  int UTILITY_COMBINATION = 62;
  int RELEVANCE = 63;
  int PURPOSE = 64;
  int CONSTRAINT = 65;
  int LOGICALEXPRESSION = 66;
  int GAUSS = 67;
  int IN = 68;
  int AND = 69;
  int OR = 70;
  int IMPLICATION = 71;
  int DOUBLEIMPLICATION = 72;
  int NOT = 73;
  int RANGE = 74;
  int GENERALIZEDTABLE = 75;
  int BOOLEAN = 76;
  int TRUE = 77;
  int FALSE = 78;
  int OPEN_PAREN = 79;
  int CLOSE_PAREN = 80;
  int COMMA = 81;
  int OPEN_COR = 82;
  int CLOSE_COR = 83;
  int DECIMAL_LITERAL = 84;
  int INTEGER = 85;
  int FLOATSCI = 86;
  int FLOAT = 87;
  int COMODIN = 88;
  int PARAMETER_WORD = 89;
  int WORD = 90;
  int LETTER = 91;
  int DIGIT = 92;
  int EQUAL = 93;
  int STRINGDECIMAL = 94;
  int STRING = 95;
  int SQUARE = 96;

  int DEFAULT = 0;

  String[] tokenImage = {
    "<EOF>",
    "<token of kind 1>",
    "<token of kind 2>",
    "<token of kind 3>",
    "\"graph\"",
    "\"network\"",
    "\"idiagram\"",
    "\"id-with-svnodes\"",
    "\"dan\"",
    "\"uid\"",
    "\"bnet\"",
    "\"title\"",
    "\"kindofgraph\"",
    "\"comment\"",
    "\"author\"",
    "\"whochanged\"",
    "\"whenchanged\"",
    "\"visualprecision\"",
    "\"version\"",
    "\"locked\"",
    "\"consistency-properties\"",
    "\"node\"",
    "\"finite-states\"",
    "\"continuous\"",
    "\"link\"",
    "\"relation\"",
    "\"deterministic\"",
    "\"henrionVSdiez\"",
    "\"type-of-variable\"",
    "\"kind-of-node\"",
    "\"num-states\"",
    "\"unit\"",
    "\"pos_x\"",
    "\"pos_y\"",
    "\"states\"",
    "\"values\"",
    "\"table\"",
    "\"table-interval\"",
    "\"tree\"",
    "\"tree-interval\"",
    "\"continuous-tree\"",
    "\"convex-set\"",
    "\"credal-set-tree\"",
    "\"case\"",
    "\"default\"",
    "\"default-interval\"",
    "\"default-intervals\"",
    "\"directed\"",
    "\"every\"",
    "\"active\"",
    "\"function\"",
    "\"name-of-relation\"",
    "\"kind-of-relation\"",
    "\"exp\"",
    "\"min\"",
    "\"max\"",
    "\"chance\"",
    "\"decision\"",
    "\"utility\"",
    "\"super-value\"",
    "\"potential\"",
    "\"conditional-prob\"",
    "\"utility-combination\"",
    "\"relevance\"",
    "\"purpose\"",
    "\"constraint\"",
    "\"logical-expression\"",
    "\"Gauss\"",
    "\"in\"",
    "\"&\"",
    "\"|\"",
    "\"->\"",
    "\"<->\"",
    "\"!\"",
    "\"range\"",
    "\"generalizedTable\"",
    "<BOOLEAN>",
    "\"true\"",
    "\"false\"",
    "\"(\"",
    "\")\"",
    "\",\"",
    "\"[\"",
    "\"]\"",
    "<DECIMAL_LITERAL>",
    "<INTEGER>",
    "<FLOATSCI>",
    "<FLOAT>",
    "\"#\"",
    "<PARAMETER_WORD>",
    "<WORD>",
    "<LETTER>",
    "<DIGIT>",
    "\"=\"",
    "<STRINGDECIMAL>",
    "<STRING>",
    "<SQUARE>",
    "\"{\"",
    "\"}\"",
    "\";\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
  };

}
